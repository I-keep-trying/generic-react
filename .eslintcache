[{"C:\\Users\\Owner\\webdev\\generic-react\\src\\index.js":"1","C:\\Users\\Owner\\webdev\\generic-react\\src\\App.js":"2"},{"size":214,"mtime":1607362137467,"results":"3","hashOfConfig":"4"},{"size":2562,"mtime":1607789965528,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w32rnj",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\Owner\\webdev\\generic-react\\src\\index.js",[],"C:\\Users\\Owner\\webdev\\generic-react\\src\\App.js",["11"],"import React, { useState } from 'react'\r\n//import './App.css'\r\n\r\n// functionality demo: https://codewordsolver.com/\r\n\r\nconst stringArray = [\r\n  { word: 'bassoon', score: 371 },\r\n  { word: 'barroon', score: 371 },\r\n  { word: 'babboon', score: 371 },\r\n]\r\n\r\nconst App = () => {\r\n  const [results, setResults] = useState([])\r\n  const [n, setN] = useState([])\r\n  const input = '1a1122n'\r\n\r\n  let m\r\n  let words = []\r\n  const getMatches = (arr1, arr2) => {\r\n    const x = [...arr1.matchAll(/\\d/g)]\r\n    console.log('x', x)\r\n    setN(x) // this is not doing what I want\r\n    m = arr2.forEach((word) => words.push(word))\r\n    //[...arr2.matchAll()]\r\n    return n\r\n  }\r\n  console.log('n', n)\r\n  const compareWords = (arr1, arr2) => {\r\n    arr2.map((obj) => {\r\n      obj.word.split('').forEach((targetLetter, i) => {\r\n        arr1.split('').map((inputLetter, index) => {\r\n          if (!obj.word.includes(inputLetter) && i === index) {\r\n            let p = [...input.matchAll(inputLetter)]\r\n            console.log('p', p)\r\n            const inputCount = input.split(index).length - 1\r\n            const letterCount = obj.word.split(obj.word.charAt(index)) - 1\r\n\r\n            if (inputCount !== letterCount) {\r\n              setResults(\r\n                stringArray.filter((result) => {\r\n                  // console.log('setResults filter', result)\r\n                  // WHY WHY WHY WHY why is this happening when the condition is not met??????????????????\r\n                  // I know why now, because it's looping and some loops DO meet the condition\r\n                  return result === obj.word ? null : result\r\n                })\r\n              )\r\n            }\r\n\r\n            const testWord = input.replaceAll(inputLetter, targetLetter)\r\n            console.log('testWord', testWord)\r\n            if (input === obj.word) {\r\n              console.log('testWord === obj.word')\r\n            }\r\n\r\n            console.log('---------------------')\r\n          }\r\n          return inputLetter\r\n        })\r\n      })\r\n      return obj.word\r\n    })\r\n  }\r\n\r\n  console.log('results', results)\r\n\r\n  const handleClick = () => {\r\n    compareWords(input, stringArray)\r\n  }\r\n\r\n  const handleClick2 = () => {\r\n    getMatches(input, stringArray)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={handleClick2}>get matches</button>\r\n      {JSON.stringify(n)}\r\n\r\n      <br />\r\n      {JSON.stringify(words)}\r\n      <br />\r\n      <button onClick={handleClick}>compare</button>\r\n      <br />\r\n\r\n      {JSON.stringify(results)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n",{"ruleId":"12","severity":1,"message":"13","line":23,"column":5,"nodeType":"14","messageId":"15","endLine":23,"endColumn":6},"no-unused-vars","'m' is assigned a value but never used.","Identifier","unusedVar"]